 
                   Работа из командной строки.
После перехода в командную строку Ubuntu, работа с компилятором
мало отличается от  дисплейного класса.
Проверить версию компилятора:
g++ --version
откомпилировать файл 1.c:
gcc 1.c
(+ много ключей, справку по которым можно получить командой 
man gcc
)
запустить программу, которая успешно скомпилировалась, 
./a.out
Откомпилировать С++ программу:
g++ 1.cpp
Собрать проект (из makefile):
make
Собрать проект, используя для сборки файл makefile.txt:
make -f makefile.txt
Стрелочками вверх/вниз можно вспомнить введенные ранее команды.

Отследить утечки памяти можно, подкачав пакет valgrind.
Его (аналогично и другой необходимый вам пакет) можно получить 
командой
sudo apt install  valgrind
(попросит пароль, который вы завели при установке Ubuntu)
Обратная команда -- удаление ненужного пакета выглядит так:
sudo apt remove имя_пакета
Запустить программу с контролем утечек:
valgrind ./a.out
В  разделе LEAK будет содержаться информация о них.
Например, если вы не закрыли открытый в программе файл, 
увидите ошибку в этом разделе.

Еще один метод  диагностики ошибок -- отладчик gdb
(он есть в любом компиляторе.)
Чтобы включить в исполняемый файл отладочную информацию, 
компилируем, добавив ко всем необходимым ключам -g:
gcc -g 1.c
И запускаем отладчик:
gdb ./a.out
Перед запуском программы установите точку, где программа должна 
остановить свое выполнение:
break main
(вместо main может быть любое имя функции, входящей в проект
или номер строки) 
после чего можно запускать программу
run
Программа выполнится до точки останова.  После этого можно 
посмотреть значения переменных (вместо х может быть любое имя)
p x
и сделать 1  шаг 
next
(или s 1, вместо 1 шагов может быт больше). В последнем случае отладчик 
будет заходить во все функции, включая библиотечные, что не очень удобно).
Далее можно опять распечатать значения переменной (и любого 
выражения), и повторить все (Enter означает повторить последнюю 
команду).
Для справки
h
для выхода
q
Прогнать программу по шагам можно, сказав после запуска 
отладчика
start
next
будут напечатаны строки, которые выполняются, каждое нажатие 
Enter будет  выполнением одного шага программы. Так, например, 
можно понять, почему программа зациклилась.

Редактировать программу  можно и в любом редакторе Wim, открыв 
одновременно 2 окна.  Можно освоить мощный (но достаточно 
трудный) vim.
Открыть файл :
vim 1.txt
У этого редактора 2 режима -- командный и ввод текста.
Переключаться между режимами надо клавишами Esc и Ins 
(или буква i). После ввода (изменения) текста надо перейти к 
командному режиму  (Esc), нажать двоеточие (проверьте раскладку 
клавиатуры)  и можно писать команды (например, компилировать, 
запускать, перейти в  директорию 1: cd 1, вывести названия файлов 
текущей папки: ls   и т.д. Выйти из  редактора:
:q
Причем если вы изменили файл и хотите его сохранить
:wq
выйти без сохранения
:q!

                                                         